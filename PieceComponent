import java.awt.image.BufferedImage;

import javax.swing.JComponent;

/*
 * Public class PieceCompononent to connect the Piece objects with their
 * corresponding buffered images. 
 */

public class PieceComponent extends JComponent {
	
	//private data 
	private BufferedImage image;
	private int x;
	private int y;
	private Piece piece;
	
//	Graphics g;
	
	//getters and setters for private data 
	public BufferedImage getImage() {
		return image;
	}
	public void setImage(BufferedImage image) {
		this.image = image;
	}
	public int getWidth() {
		return image.getWidth();
	}
	public int getHeight() {
		return image.getHeight();
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public Piece getPiece(){
		return piece; 
	}
//	public String pieceToString(){
//		String p = "";
//		for(int i = 0; i < 4; i++){
//			p+= piece.getEdge(i);
//		}
//		return p;
//	}


	/*constructor which takes in 4 ints for each side of the piece and a buffered image and
	 * x and y coordinates for a location. 
	 */
 	public PieceComponent(int north, int east, int south, int west, BufferedImage image, int x, int y){
		this.piece = new Piece(north, east, south, west);
		setImage(image);
		this.x = x;
		this.y = y;
	}
	
	//alternate constructor which recieves a piece instead of 4 directions
	public PieceComponent(Piece piece, BufferedImage image, int x, int y){
		this.piece = piece;
		setImage(image);
		this.x = x;
		this.y = y;
	}
	
	//rotates the actual piece 90 degrees (clockwise) each time the method is called
	public void rotate(){
		piece.rotate();

	}



}
