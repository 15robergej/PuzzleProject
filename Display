import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.event.MenuDragMouseListener;


public class Display {
	
	private JFrame frame;
	private JPanel panel;
	private PuzzlePanel puzzlePanel;
	private JButton restartButton, solveButton;
	private JPanel board;
	
	public Display(){
		makeFrame(600,600);
		panel = new JPanel(new GridBagLayout());
		frame.add(panel,BorderLayout.NORTH);
		instructionsButton();
		restartButton();
		solveButton();
		addPuzzle();
		frame.setVisible(true);
	}
	
	public void makeFrame(int width, int height) {
		frame = new JFrame();	
		frame.setTitle("Puzzle");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setMinimumSize(new Dimension(800, 700));
		frame.setSize(width, height);
	}
	
	
	public void restartButton() {
		restartButton = new JButton("Restart");
		
		GridBagConstraints c = new GridBagConstraints();
		c.gridx = 1;
		c.gridy = 0;
		c.insets = new Insets(10, 10, 10, 10);
	//	c.anchor = GridBagConstraints.LAST_LINE_END;
		panel.add(restartButton, c);
		
		class RestartListener implements ActionListener {
			public void actionPerformed(ActionEvent event){
				puzzlePanel.restart();
				System.out.println("Restart button pressed.");
				//what it does
			}
		}
		ActionListener restart = new RestartListener();
		restartButton.addActionListener(restart);
	
	}
	
	public void solveButton() {
		solveButton = new JButton("Solve");
		
		class SolveListener implements ActionListener {
			public void actionPerformed(ActionEvent event){
				puzzlePanel.solve();
				System.out.println("Solve button pressed.");
			}
		}
		
		ActionListener solve = new SolveListener();
		solveButton.addActionListener(solve);
	//	solveButton.setBounds(100, 0, 100, 50);
		GridBagConstraints c = new GridBagConstraints();
		c.gridx = 2;
		c.gridy = 0;
		c.insets = new Insets(10, 10, 10, 10);
	//	c.anchor = GridBagConstraints.EAST;
		panel.add(solveButton,c);	
	}
	
	public void instructionsButton() {
		solveButton = new JButton("Instructions");
		
		class SolveListener implements ActionListener {
			public void actionPerformed(ActionEvent event){
				JFrame a = new JFrame();	
				JLabel label = new JLabel("<html><center>Thanks for playing our Puzzle Project!<br>"
						+ "Drag the pieces to their appropriate places on the grid."
						+ "<br>To rotate, click on a piece and it will rotate 90 degrees clockwise.<br>"
						+ "The solve button will put each of the pieces on the board in their correct places and provide one of the 4 solutions to the puzzle."
						+ "<br>The restart button will remove all the pieces from the board and turn all the pieces back to their original orientation."
						+ "<br><br>"
						+ "This project was made by David Chen, Shreya Hegde, Jacquelyn Roberge, Sabrina Tsai, and Jessie Ying</center>"
						+ "</html>",SwingConstants.CENTER);
				a.add(label);
				a.setTitle("Instructions");
				a.setMinimumSize(new Dimension(500, 300));
				a.setLocationRelativeTo(frame);
				a.setVisible(true);
				System.out.println("Instructions Button pressed.");
			}
		}
		
		ActionListener solve = new SolveListener();
		solveButton.addActionListener(solve);
	//	solveButton.setBounds(100, 0, 100, 50);
		GridBagConstraints c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 0;
		c.insets = new Insets(10, 10, 10, 10);
	//	c.anchor = GridBagConstraints.EAST;
		panel.add(solveButton,c);	
	}
	
	public void addBoard() {
		
		board = new JPanel(new GridBagLayout()); //layout??
	
		board.setBackground(Color.blue);
		board.setVisible(true);
		
//		GridBagConstraints c = new GridBagConstraints();
//		c.gridwidth=2;
//		c.gridheight=2;
//		c.gridx = 3;
//		c.gridy = 0;
//		c.insets = new Insets(0, 0, 0, 0);
//		c.fill = GridBagConstraints.BOTH;
	//	c.anchor = GridBagConstraints.EAST;
		panel.add(board);
		
		//drag listener?
	
	}
	
//	public static void addPieces(JFrame frame) {
//		
//		final PieceComponent pieces= new PieceComponent();
//	
//		frame.add(pieces);
//		
//		}
	
	public void addPuzzle(){
		
		puzzlePanel = new PuzzlePanel();
		
		frame.add(puzzlePanel);
		
	}
	
	public static void main(String[] args){
		Display display = new Display();
		
	}
}

	           
